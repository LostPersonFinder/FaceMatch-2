<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">

<!--
 - web.xml
 -
 - Version: $Revision: 1.0 $
 -
 - Date: $Date: 2015/02/19 14:36:15 $
-->

<!--
  - The is the servlet deployment descriptor for Tomcat 7.x for FaceMatch 
  - Web user interface
  - The operation to be performed, and parameters to be retrieved, by a Servlet performing multiple functions 
  - is determined internally at runtime from the url-pattern.
  - NOTE:
  -   Replace  -WebFM2InstallDir- in <context-param><param_name> with your WebFM2 installation directory path -->
  -->

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<display-name>FaceMatch2</display-name>

<!-- Configuration Information -->
<!-- This needs to be loaded before other servlets. -->
<context-param>
	<param-name>facematch-config</param-name>
	<param-value><-WebFM2InstallDir->/config/webfm2server.cfg</param-value>
	<description> The location of the main FaceMatch configuration file </description>
</context-param>


<!-- Servlet name to implementation class mapping-->
<!-- Initialization servlet - at FM startup time-->
-<servlet>
	<servlet-name>facematch2</servlet-name>
	<servlet-class>fmservice.webapp.servlet.FaceMatchStartupServlet</servlet-class>
                  <load-on-startup>0</load-on-startup>
</servlet>

<!-- For requests coming from FM Administrators, only username and password common to all requests -->
-<servlet>
	<servlet-name>admin</servlet-name>
	<servlet-class>fmservice.webapp.servlet.FaceMatchAdminServlet</servlet-class>
	<init-param>
		<param-name>user</param-name>
		<param-value>fmadmin</param-value>
	</init-param>
	<init-param>
		<param-name>password</param-name>
		<param-value></param-value>                     <!-- use  fm-ops$$ -->
	</init-param>
</servlet>

<!-- For requests coming from FM Administrators, only username and password common to all requests -->
-<servlet>
	<servlet-name>recordOps</servlet-name>
	<servlet-class>fmservice.webapp.servlet.FaceMatchAdminServlet</servlet-class>
	<init-param>
		<param-name>user</param-name>
		<param-value>fmadmin</param-value>
	</init-param>
	<init-param>
		<param-name>password</param-name>
		<param-value></param-value>                     <!-- use  fm-ops$$ -->
	</init-param>
	<init-param>
		<param-name>record</param-name>
		<param-value>off</param-value>
                  </init-param>
	<init-param>
		<param-name>ops</param-name>	<!-- facematch operation -->
		<param-value></param-value>
	</init-param>
</servlet>

<!-- Request to add a new client - from FM Administrators  -->
-<servlet>
	<servlet-name>clientOps</servlet-name>
	<servlet-class>fmservice.webapp.servlet.FaceMatchAdminServlet</servlet-class>
	<init-param>
		<param-name>user</param-name>
		<param-value>fmadmin</param-value>
	</init-param>
	<init-param>
		<param-name>password</param-name>
		<param-value></param-value>
	</init-param>
                  <init-param>
                                    <param-name>name</param-name>
                                    <param-value></param-value>
                  </init-param>
	<init-param>
		<param-name>infofile</param-name> 
		<param-value></param-value>
	</init-param>
</servlet>
        

<!-- Face Finding Requests -->
<servlet>
	<servlet-name>faceFindOps</servlet-name>
	<servlet-class>fmservice.webapp.servlet.core.FaceFindOpsServlet</servlet-class>
	<init-param>
		<param-name>key</param-name>
		<param-value></param-value>
	</init-param>
	<init-param>
		<param-name>url</param-name>
		<param-value></param-value>
	</init-param>
                  <init-param>
		<param-name>region</param-name>
		<param-value></param-value>
	</init-param>
	<init-param>
		<param-name>landmarks</param-name>
		<param-value>false</param-value>
	</init-param>
	<init-param>
		<param-name>inflateby</param-name>
		<param-value>0.0</param-value>
	</init-param>
        	<init-param>
		<param-name>performance</param-name>
		<param-value>progressive</param-value>
	</init-param>
</servlet>

<!-- FaceMatcher servlet: for Ingest, Query and Remove Requests -->

<!-- Ingest -->
<servlet>
	<servlet-name>faceIngestOps</servlet-name>
	<servlet-class>fmservice.webapp.servlet.core.FaceIngestOpsServlet</servlet-class>
	<init-param>
		<param-name>key</param-name>
		<param-value></param-value>
	</init-param>
	<init-param>	
		<param-name>extent</param-name>
		<param-value></param-value>
	</init-param>
	<init-param>	
		<param-name>url</param-name>
		<param-value></param-value>
	</init-param>
	<init-param>
		<param-name>tag</param-name>
		<param-value></param-value>
	</init-param>
<!-- optional parameters -->
                  <init-param>
		<param-name>region</param-name>		<!-- optional, pre-defined regions in the  image -->
		<param-value></param-value>
	</init-param> 
	<init-param>
		<param-name>gender</param-name>	
		<param-value>unknown</param-value>
	</init-param>
	<init-param>
		<param-name>agegroup</param-name>		
		<param-value>unknown</param-value>
	</init-param>
                  <init-param>
		<param-name>age</param-name>                        <!-- optional, either are or agegroup should be specified,  -1 means unknown -->	
		<param-value>-1</param-value>
	</init-param>
	<init-param>
		<param-name>location</param-name>		<!-- optional, in the given image -->
		<param-value>unknown</param-value>
	</init-param>
</servlet>
<!-- remove -->
<servlet>
	<servlet-name>faceRemoveOps</servlet-name>
	<servlet-class>fmservice.webapp.servlet.core.FaceIngestOpsServlet</servlet-class>
	<init-param>
		<param-name>key</param-name>
		<param-value></param-value>
	</init-param>
	<init-param>	
		<param-name>extent</param-name>
		<param-value></param-value>
	</init-param>
	<init-param>
		<param-name>tag</param-name>
		<param-value></param-value>
	</init-param>
	<init-param>
		<param-name>region</param-name>	<!-- optional -->
		<param-value></param-value>
	</init-param>
</servlet>

<!-- query -->
<servlet>
	<servlet-name>faceQueryOps</servlet-name>
	<servlet-class>fmservice.webapp.servlet.core.FaceQueryOpsServlet</servlet-class>
	<init-param>
		<param-name>key</param-name>
		<param-value></param-value>
	</init-param>
	<init-param>	
		<param-name>extent</param-name>
		<param-value></param-value>
	</init-param>
	<init-param>
		<param-name>url</param-name>			<!-- uri of image to be matched (query image) -->
		<param-value></param-value>
	</init-param>
                  <init-param>
		<param-name>region</param-name>			<!-- optional, in the query image -->
		<param-value></param-value>
	</init-param> 
	<init-param>
		<param-name>gender</param-name>	
		<param-value>unknown</param-value>
	</init-param>
                  <init-param>
		<param-name>agegroup</param-name>		
		<param-value>unknown</param-value>
	</init-param>
                 <init-param>
		<param-name>age</param-name>                        <!-- optional, either are or agegroup should be specified,  -1 means unknown -->	
		<param-value>-1</param-value>
	</init-param>
	
                  <init-param>
		<param-name>tolerance</param-name>		<!-- optional, tolerance for matching distance -->
		<param-value></param-value>                                 
	</init-param>
                  <init-param>
		<param-name>maxmatches</param-name>     <!-- optional, max number of matches to return -->
		<param-value></param-value>                                   
	</init-param>
</servlet>

<servlet>
	<servlet-name>multiRegFaceQueryOps</servlet-name>
	<servlet-class>fmservice.webapp.servlet.core.FaceQueryOpsServlet</servlet-class>
	<init-param>
		<param-name>key</param-name>
		<param-value></param-value>
	</init-param>
	<init-param>	
		<param-name>extents</param-name>            // comma separated region names
		<param-value></param-value>
	</init-param>
	<init-param>
		<param-name>url</param-name>			<!-- uri of image to be matched (query image) -->
		<param-value></param-value>
	</init-param>
                  <init-param>
		<param-name>region</param-name>			<!-- optional, in the query image -->
		<param-value></param-value>
	</init-param> 
	<init-param>
		<param-name>gender</param-name>	
		<param-value>unknown</param-value>
	</init-param>
                  <init-param>
		<param-name>agegroup</param-name>		
		<param-value>unknown</param-value>
	</init-param>
	<init-param>
		<param-name>age</param-name>                            <!-- optional, either age or agegroup should be specified,  -1 means unknown -->	
		<param-value>-1</param-value>
	</init-param>
                  <init-param>
		<param-name>tolerance</param-name>		<!-- optional, tolerance for matching distance -->
		<param-value></param-value>                                 
	</init-param>
                  <init-param>
		<param-name>maxmatches</param-name>             <!-- optional, max number of matches to return per extent-->
		<param-value></param-value>                                   
	</init-param>
</servlet>


<!-- ImageExtentServlet: for creation/deletion/activation functions -->
<!-- Performance option may be specified with  add, activate commands or separately at any time -->
<!-- Example:  .../extent/add ? key=xxx & name = yyy & description = zzz & performance=speed -->
<!-- or,   .../extent/performance ? key=xxx & name = yyy &option = speed -->
<servlet>
	<servlet-name>extentOps</servlet-name>
	<servlet-class>fmservice.webapp.servlet.core.ExtentOpsServlet</servlet-class>
	<init-param>
		<param-name>key</param-name>
		<param-value></param-value>
	</init-param>
	<init-param>	
		<param-name>name</param-name>
		<param-value></param-value>
	</init-param>
	<init-param>
		<param-name>description</param-name>
		<param-value></param-value>
	</init-param>
                  <init-param>
		<param-name>performance</param-name>  <!-- with add/activate -->
		<param-value>optimal</param-value>
	</init-param>
</servlet>

 <!-- ExtentOpsServlet: used for setting the performance level functions -->
<servlet>
	<servlet-name>performanceOps</servlet-name>
	<servlet-class>fmservice.webapp.servlet.core.ExtentOpsServlet</servlet-class>
                   <init-param>
		<param-name>key</param-name>
		<param-value></param-value>
	</init-param>
	<init-param>	
		<param-name>name</param-name>
		<param-value></param-value>
	</init-param>
	<init-param>
		<param-name>option</param-name>
		<param-value>optimal</param-value>
	</init-param>
</servlet>


<!-- Database Recorded  info about  a client, image extents, images, etc.  -->
<!-- Presently not implemented -->
<servlet>
	<servlet-name>dbqueryOps</servlet-name>
	<servlet-class>fmservice.webapp.servlet.DatabaseQueryServlet</servlet-class>
	<init-param>
		<param-name>client</param-name>
		<param-value>""</param-value>
	</init-param>
                   <init-param>
		<param-name>extent</param-name>
		<param-value>""</param-value>
	</init-param>
                  <init-param>
		<param-name>imagetag</param-name>
		<param-value>""</param-value>
	</init-param>
                  <init-param>
		<param-name>key</param-name>
		<param-value>""</param-value>
	</init-param>
</servlet>
    
<!-- Database Records about  all clients in the system , for access by admin only  -->
<servlet>
                  <servlet-name>clientInfoOps</servlet-name>
                  <servlet-class>fmservice.webapp.servlet.DatabaseQueryServlet</servlet-class>
                  <init-param>
                            <param-name>user</param-name>
                            <param-value>fmadmin</param-value>
                  </init-param>
                  <init-param>
                                <param-name>password</param-name>
                                <param-value></param-value>                     <!-- use  fm-ops$$ -->
                  </init-param>
</servlet>


<!-- *****************************************
   For servlet name to FM2 Service  URL mapping
*******************************************  -->

-<servlet-mapping>
	<servlet-name>facematch2</servlet-name>
                    <url-pattern>/</url-pattern>
	<url-pattern>/status</url-pattern>
</servlet-mapping>

<!-- System shutdown and gpu on/off admin functions -->
-<servlet-mapping>
	<servlet-name>admin</servlet-name>
	<url-pattern>/admin/shutdown</url-pattern>
	<url-pattern>/admin/gpuon</url-pattern>
	<url-pattern>/admin/gpuoff</url-pattern>
</servlet-mapping>

-<servlet-mapping>
	<servlet-name>recordOps</servlet-name>
	<url-pattern>/admin/perfrec</url-pattern>	
</servlet-mapping>

-<servlet-mapping>
	<servlet-name>clientOps</servlet-name>
	<url-pattern>/admin/addclient</url-pattern>	
</servlet-mapping>

-<servlet-mapping>
	<servlet-name>clientInfoOps</servlet-name>
         <url-pattern>/info/clients</url-pattern>
</servlet-mapping>

-<servlet-mapping>
	<servlet-name>dbqueryOps</servlet-name>
         <url-pattern>/info</url-pattern>
</servlet-mapping>

<!-- image extent creation/deletion, activation/deactivation  setting --> 
-<servlet-mapping>
                <servlet-name>extentOps</servlet-name>
                <url-pattern>/extent/add</url-pattern>
                <url-pattern>/extent/remove</url-pattern>
                <url-pattern>/extent/activate</url-pattern>
                <url-pattern>/extent/deactivate</url-pattern>
-</servlet-mapping>

<!-- image extent Performance option  setting --> 
<servlet-mapping>
                <servlet-name>performanceOps</servlet-name>
                <url-pattern>/extent/performance</url-pattern>
-</servlet-mapping>

<!-- FaceFinding functions -->
<!-- Note: /ir path referes to a future interactive version, which is not implemented currently. -->
-<servlet-mapping>
                <servlet-name>faceFindOps</servlet-name>
                <url-pattern>/ffind/getfaces</url-pattern>
                <url-pattern>/ffind/ir/getfaces</url-pattern>
-</servlet-mapping>

<!-- Face Ingesting and Matching functions -->
-<servlet-mapping>
                <servlet-name>faceIngestOps</servlet-name>
                <url-pattern>/reg/ingest</url-pattern>
                <url-pattern>/reg/ir/ingest</url-pattern>
-</servlet-mapping>

-<servlet-mapping>
	<servlet-name>faceRemoveOps</servlet-name>
	<url-pattern>/reg/remove</url-pattern>
                  <url-pattern>/reg/ir/remove</url-pattern>
-</servlet-mapping>

-<servlet-mapping>
	<servlet-name>faceQueryOps</servlet-name>
	<url-pattern>/reg/query</url-pattern>
                  <url-pattern>/reg/ir/query</url-pattern>
-</servlet-mapping>
-<servlet-mapping>
	<servlet-name>multiRegFaceQueryOps</servlet-name>
	<url-pattern>/reg/queryall</url-pattern>
                  <url-pattern>/reg/ir/queryall</url-pattern>		
-</servlet-mapping>


<!-- Whole image Ingesting and Matching functions -->
<!--
-<servlet-mapping>
                <servlet-name>wholeImageIngestOps</servlet-name>
                <url-pattern>/fm-image/ingest</url-pattern>
-</servlet-mapping>

-<servlet-mapping>
                <servlet-name>wholeImageMatchOps</servlet-name>
                <url-pattern>/fm-image/query</url-pattern>	
-</servlet-mapping>

    -<servlet-mapping>
                <servlet-name>wholeImageRemoveOps</servlet-name>
                <url-pattern>/fm-image/remove</url-pattern>
    -</servlet-mapping>
    -->
    <!-- Error pages -->
    -<error-page>
        <error-code>404</error-code>
        <location>/error</location>
    </error-page>

    -<error-page>
        <error-code>500</error-code>
        <location>/internal-error</location>
    </error-page>

    -<error-page>
        <exception-type>java.lang.Exception</exception-type>
        <location>/internal-error</location>
    </error-page>
</web-app>

